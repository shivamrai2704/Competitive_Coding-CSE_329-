#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
struct node 
{
    int data;
    struct node * next;
    
};

struct node * front=NULL;
struct node * rear=NULL;
void enqueue(int value) 
{
    struct node * ptr;
    ptr=new node;
    ptr->data=value;
    ptr->next=NULL;
    if ((front==NULL)&&(rear==NULL)) 
    {
        front=rear=ptr;
    } 
    else
        {
            rear->next=ptr;
            rear=ptr;
        }
}
void dequeue() 
{
    if (front==NULL) 
    {
        return;
    } 
    else 
    {
        struct node * temp=front;
        front=front->next;
        free(temp);
    }
}
void display() 
{
    struct node * temp;
    if ((front==NULL)&&(rear==NULL)) 
    {
        return;
    } 
    else 
    {
       temp=front;
       cout<<temp->data<<endl;
       temp=temp->next;
    }
}

int main() 
{
    int i,q,choice,value;
    cin>>q;
    for(i=0;i<q;i++)
    {
        cin>>choice;
        if(choice==1)
        {
            cin>>value;
            enqueue(value);
        }
        else if(choice==2)
        {
            dequeue();
        }
        else
        {
            display();
        }
    }
    return 0;
}
